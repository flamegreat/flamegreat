import{_ as a,c as s,a0 as i,o as d}from"./chunks/framework.CoVXEd1Z.js";const c=JSON.parse('{"title":"下拉框","description":"","frontmatter":{"head":[["meta",{"name":"keywords","content":"LayComboBox"}]],"footer":false},"headers":[],"relativePath":"controls/combobox.md","filePath":"controls/combobox.md","lastUpdated":null}'),e={name:"controls/combobox.md"};function o(n,t,h,l,r,k){return d(),s("div",null,t[0]||(t[0]=[i(`<h1 id="下拉框" tabindex="-1">下拉框 <a class="header-anchor" href="#下拉框" aria-label="Permalink to &quot;下拉框&quot;">​</a></h1><h2 id="代码示例" tabindex="-1">代码示例 <a class="header-anchor" href="#代码示例" aria-label="Permalink to &quot;代码示例&quot;">​</a></h2><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Lay:LayComboBox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Lay:LayComboBoxItem</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Lay:LayComboBoxItem</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;234&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Lay:LayComboBox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="laybutton-属性" tabindex="-1">LayButton 属性 <a class="header-anchor" href="#laybutton-属性" aria-label="Permalink to &quot;LayButton 属性&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性名</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>CornerRadius</td><td>下拉框圆角</td><td><code>struct</code></td><td><code>0</code></td></tr><tr><td>Watermark</td><td>水印</td><td><code>string</code></td><td><code>这是水印</code></td></tr><tr><td>WatermarkColor</td><td>水印文字颜色</td><td><code>Brush</code></td><td></td></tr><tr><td>HoverBorderBrush</td><td>鼠标悬浮时，边框颜色</td><td><code>Brush</code></td><td></td></tr><tr><td>FocusedBorderBrush</td><td>光标聚焦后的边框色</td><td><code>Brush</code></td><td></td></tr><tr><td>Line</td><td>分割线宽度(只有IsEditable开启才生效)</td><td><code>double</code></td><td></td></tr></tbody></table>`,5)]))}const E=a(e,[["render",o]]);export{c as __pageData,E as default};
